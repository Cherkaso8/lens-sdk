/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'AccessToken': unknown;
    'Account': { kind: 'OBJECT'; name: 'Account'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'OBJECT'; name: 'AccountMetadata'; ofType: null; } }; 'operations': { name: 'operations'; type: { kind: 'OBJECT'; name: 'LoggedInAccountOperations'; ofType: null; } }; 'score': { name: 'score'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'SCALAR'; name: 'UsernameValue'; ofType: null; } }; }; };
    'AccountAuthenticationsRequest': { kind: 'INPUT_OBJECT'; name: 'AccountAuthenticationsRequest'; isOneOf: false; inputFields: [{ name: 'app'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; defaultValue: null }, { name: 'pageSize'; type: { kind: 'ENUM'; name: 'PageSize'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }]; };
    'AccountBlocked': { kind: 'OBJECT'; name: 'AccountBlocked'; fields: { 'account': { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; 'blockedAt': { name: 'blockedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'AccountFeedsStats': { kind: 'OBJECT'; name: 'AccountFeedsStats'; fields: { 'collects': { name: 'collects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'comments': { name: 'comments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'posts': { name: 'posts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'quotes': { name: 'quotes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'reacted': { name: 'reacted'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'reactions': { name: 'reactions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'reposts': { name: 'reposts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'AccountFeedsStatsRequest': { kind: 'INPUT_OBJECT'; name: 'AccountFeedsStatsRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'forFeeds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: "[\"0xa8E1e68E3195d8e150A95CF2D0F0AfaE154f8fa5\"]" }]; };
    'AccountFollowRuleError': { kind: 'OBJECT'; name: 'AccountFollowRuleError'; fields: { 'error': { name: 'error'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AccountFollowRuleErrorType'; ofType: null; }; } }; }; };
    'AccountFollowRuleErrorType': { name: 'AccountFollowRuleErrorType'; enumValues: 'UNKNOWN'; };
    'AccountFollowRuleResult': { kind: 'UNION'; name: 'AccountFollowRuleResult'; fields: {}; possibleTypes: 'AccountFollowRuleError' | 'OptimisticAccountFollowRule' | 'SponsoredTransactionRequest' | 'TransactionRequest'; };
    'AccountGraphsFollowStats': { kind: 'OBJECT'; name: 'AccountGraphsFollowStats'; fields: { 'followers': { name: 'followers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'following': { name: 'following'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'AccountGraphsStatsRequest': { kind: 'INPUT_OBJECT'; name: 'AccountGraphsStatsRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'forGraphs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: "[\"0x7bE2cA3B7be499546f3f31605f4818D70d14439A\"]" }]; };
    'AccountManaged': { kind: 'OBJECT'; name: 'AccountManaged'; fields: { 'account': { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; 'addedAt': { name: 'addedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'AccountManager': { kind: 'OBJECT'; name: 'AccountManager'; fields: { 'addedAt': { name: 'addedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'isLensManager': { name: 'isLensManager'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'AccountManagersRequest': { kind: 'INPUT_OBJECT'; name: 'AccountManagersRequest'; isOneOf: false; inputFields: [{ name: 'pageSize'; type: { kind: 'ENUM'; name: 'PageSize'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }]; };
    'AccountMetadata': { kind: 'OBJECT'; name: 'AccountMetadata'; fields: { 'bio': { name: 'bio'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AccountPostReaction': { kind: 'OBJECT'; name: 'AccountPostReaction'; fields: { 'account': { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; 'reactions': { name: 'reactions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostReaction'; ofType: null; }; }; }; } }; }; };
    'AccountReportReason': { name: 'AccountReportReason'; enumValues: 'IMPERSONATION' | 'REPETITIVE_SPAM' | 'OTHER'; };
    'AccountRequest': { kind: 'INPUT_OBJECT'; name: 'AccountRequest'; isOneOf: false; inputFields: [{ name: 'address'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'SCALAR'; name: 'UsernameValue'; ofType: null; }; defaultValue: null }, { name: 'legacyProfileId'; type: { kind: 'SCALAR'; name: 'LegacyProfileId'; ofType: null; }; defaultValue: null }]; };
    'AccountSearchOrderBy': { name: 'AccountSearchOrderBy'; enumValues: 'USERNAME_PREFIX_ORDER' | 'ACCOUNT_SCORE'; };
    'AccountSearchRequest': { kind: 'INPUT_OBJECT'; name: 'AccountSearchRequest'; isOneOf: false; inputFields: [{ name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'query'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'namespace'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'orderBy'; type: { kind: 'ENUM'; name: 'AccountSearchOrderBy'; ofType: null; }; defaultValue: null }]; };
    'AccountSponsorLimit': { kind: 'OBJECT'; name: 'AccountSponsorLimit'; fields: { 'allowance': { name: 'allowance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'allowanceLeft': { name: 'allowanceLeft'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'allowanceUsed': { name: 'allowanceUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'window': { name: 'window'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SponsorLimitType'; ofType: null; }; } }; }; };
    'AccountSponsorRequest': { kind: 'INPUT_OBJECT'; name: 'AccountSponsorRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'appOrSponsor'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; defaultValue: null }]; };
    'AccountSponsorResult': { kind: 'OBJECT'; name: 'AccountSponsorResult'; fields: { 'global': { name: 'global'; type: { kind: 'OBJECT'; name: 'AccountSponsorLimit'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'AccountSponsorLimit'; ofType: null; } }; }; };
    'AccountStats': { kind: 'OBJECT'; name: 'AccountStats'; fields: { 'feedStats': { name: 'feedStats'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountFeedsStats'; ofType: null; }; } }; 'graphFollowStats': { name: 'graphFollowStats'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountGraphsFollowStats'; ofType: null; }; } }; }; };
    'AccountStatsRequest': { kind: 'INPUT_OBJECT'; name: 'AccountStatsRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'forFeeds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: "[\"0xa8E1e68E3195d8e150A95CF2D0F0AfaE154f8fa5\"]" }, { name: 'forGraphs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: "[\"0x7bE2cA3B7be499546f3f31605f4818D70d14439A\"]" }]; };
    'AccountUsername': { kind: 'OBJECT'; name: 'AccountUsername'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'linkedTo': { name: 'linkedTo'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; } }; 'localName': { name: 'localName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'ownedBy': { name: 'ownedBy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'prefix': { name: 'prefix'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UsernameValue'; ofType: null; }; } }; }; };
    'AccountUsernameRequest': { kind: 'INPUT_OBJECT'; name: 'AccountUsernameRequest'; isOneOf: false; inputFields: [{ name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'AccountsBlockedRequest': { kind: 'INPUT_OBJECT'; name: 'AccountsBlockedRequest'; isOneOf: false; inputFields: [{ name: 'pageSize'; type: { kind: 'ENUM'; name: 'PageSize'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }]; };
    'AccountsManagedRequest': { kind: 'INPUT_OBJECT'; name: 'AccountsManagedRequest'; isOneOf: false; inputFields: [{ name: 'pageSize'; type: { kind: 'ENUM'; name: 'PageSize'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'managedBy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'includeOwned'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'hiddenFilter'; type: { kind: 'ENUM'; name: 'ManagedAccountsVisibility'; ofType: null; }; defaultValue: null }]; };
    'AccountsRequest': { kind: 'INPUT_OBJECT'; name: 'AccountsRequest'; isOneOf: false; inputFields: [{ name: 'addresses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; defaultValue: null }, { name: 'usernames'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UsernameValue'; ofType: null; }; }; }; defaultValue: null }, { name: 'legacyProfileIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'LegacyProfileId'; ofType: null; }; }; }; defaultValue: null }, { name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }]; };
    'ActionFilter': { kind: 'INPUT_OBJECT'; name: 'ActionFilter'; isOneOf: false; inputFields: [{ name: 'address'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; defaultValue: null }, { name: 'actionType'; type: { kind: 'ENUM'; name: 'PostActionType'; ofType: null; }; defaultValue: null }, { name: 'category'; type: { kind: 'ENUM'; name: 'PostActionCategoryType'; ofType: null; }; defaultValue: null }]; };
    'ActionInfo': { kind: 'UNION'; name: 'ActionInfo'; fields: {}; possibleTypes: 'KnownAction' | 'UnknownAction'; };
    'ActionInputInfo': { kind: 'OBJECT'; name: 'ActionInputInfo'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ActiveAuthentication': { kind: 'OBJECT'; name: 'ActiveAuthentication'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'authenticationId': { name: 'authenticationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; } }; 'browser': { name: 'browser'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'device': { name: 'device'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'origin': { name: 'origin'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'os': { name: 'os'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'signer': { name: 'signer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'Amount': { kind: 'OBJECT'; name: 'Amount'; fields: { 'asset': { name: 'asset'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'Asset'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigDecimal'; ofType: null; }; } }; }; };
    'AmountInput': { kind: 'INPUT_OBJECT'; name: 'AmountInput'; isOneOf: false; inputFields: [{ name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigDecimal'; ofType: null; }; }; defaultValue: null }]; };
    'AnyPost': { kind: 'UNION'; name: 'AnyPost'; fields: {}; possibleTypes: 'Post' | 'Repost'; };
    'App': { kind: 'OBJECT'; name: 'App'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'defaultFeedAddress': { name: 'defaultFeedAddress'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; } }; 'graphAddress': { name: 'graphAddress'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'OBJECT'; name: 'AppMetadata'; ofType: null; } }; 'sponsorshipAddress': { name: 'sponsorshipAddress'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; } }; 'treasuryAddress': { name: 'treasuryAddress'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; } }; 'usernameAddress': { name: 'usernameAddress'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; } }; }; };
    'AppMetadata': { kind: 'OBJECT'; name: 'AppMetadata'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AppRequest': { kind: 'INPUT_OBJECT'; name: 'AppRequest'; isOneOf: false; inputFields: [{ name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'AppsOrderBy': { name: 'AppsOrderBy'; enumValues: 'ALPHABETICAL' | 'LATEST_FIRST' | 'OLDEST_FIRST'; };
    'AppsRequest': { kind: 'INPUT_OBJECT'; name: 'AppsRequest'; isOneOf: false; inputFields: [{ name: 'pageSize'; type: { kind: 'ENUM'; name: 'PageSize'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'orderBy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppsOrderBy'; ofType: null; }; }; defaultValue: "LATEST_FIRST" }]; };
    'Asset': { kind: 'UNION'; name: 'Asset'; fields: {}; possibleTypes: 'Erc20'; };
    'AssignUsernameToAccountError': { kind: 'OBJECT'; name: 'AssignUsernameToAccountError'; fields: { 'error': { name: 'error'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AssignUsernameToAccountErrorType'; ofType: null; }; } }; }; };
    'AssignUsernameToAccountErrorType': { name: 'AssignUsernameToAccountErrorType'; enumValues: 'UNKNOWN' | 'USERNAME_ALREADY_ASSIGNED' | 'INVALID_USERNAME' | 'UNAUTHORIZED'; };
    'AssignUsernameToAccountRequest': { kind: 'INPUT_OBJECT'; name: 'AssignUsernameToAccountRequest'; isOneOf: false; inputFields: [{ name: 'usernameAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'accountUsernameId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AssignUsernameToAccountResult': { kind: 'UNION'; name: 'AssignUsernameToAccountResult'; fields: {}; possibleTypes: 'AssignUsernameToAccountError' | 'OptimisticAssignUsernameToAccount' | 'SponsoredTransactionRequest' | 'TransactionRequest'; };
    'AuthenticationChallenge': { kind: 'OBJECT'; name: 'AuthenticationChallenge'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; } }; 'text': { name: 'text'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AuthenticationResult': { kind: 'UNION'; name: 'AuthenticationResult'; fields: {}; possibleTypes: 'AuthenticationTokens' | 'ExpiredChallengeError' | 'ForbiddenError' | 'WrongSignerError'; };
    'AuthenticationTokens': { kind: 'OBJECT'; name: 'AuthenticationTokens'; fields: { 'accessToken': { name: 'accessToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AccessToken'; ofType: null; }; } }; 'identityToken': { name: 'identityToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IdToken'; ofType: null; }; } }; 'refreshToken': { name: 'refreshToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'RefreshToken'; ofType: null; }; } }; }; };
    'BigDecimal': unknown;
    'BigInt': unknown;
    'BlockError': { kind: 'OBJECT'; name: 'BlockError'; fields: { 'error': { name: 'error'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'BlockErrorType'; ofType: null; }; } }; }; };
    'BlockErrorType': { name: 'BlockErrorType'; enumValues: 'UNKNOWN' | 'ALREADY_BLOCKED' | 'UNAUTHORIZED'; };
    'BlockRequest': { kind: 'INPUT_OBJECT'; name: 'BlockRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'BlockResult': { kind: 'UNION'; name: 'BlockResult'; fields: {}; possibleTypes: 'BlockError' | 'OptimisticBlock' | 'SponsoredTransactionRequest' | 'TransactionRequest'; };
    'BlockchainData': unknown;
    'BookmarkPostRequest': { kind: 'INPUT_OBJECT'; name: 'BookmarkPostRequest'; isOneOf: false; inputFields: [{ name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }]; };
    'Boolean': unknown;
    'BooleanValue': { kind: 'OBJECT'; name: 'BooleanValue'; fields: { 'onChain': { name: 'onChain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'optimistic': { name: 'optimistic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'CanFollowRequest': { kind: 'INPUT_OBJECT'; name: 'CanFollowRequest'; isOneOf: false; inputFields: [{ name: 'appOrGraph'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'CanUnfollowRequest': { kind: 'INPUT_OBJECT'; name: 'CanUnfollowRequest'; isOneOf: false; inputFields: [{ name: 'appOrGraph'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'ChallengeRequest': { kind: 'INPUT_OBJECT'; name: 'ChallengeRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'signedBy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'CollectActionInput': { kind: 'INPUT_OBJECT'; name: 'CollectActionInput'; isOneOf: false; inputFields: [{ name: 'simpleCollectAction'; type: { kind: 'INPUT_OBJECT'; name: 'SimpleCollectActionInput'; ofType: null; }; defaultValue: null }]; };
    'CreateAccountFollowRuleRequest': { kind: 'INPUT_OBJECT'; name: 'CreateAccountFollowRuleRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'graph'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; defaultValue: null }, { name: 'rule'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FollowRulesInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateFollowRequest': { kind: 'INPUT_OBJECT'; name: 'CreateFollowRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'graph'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: "\"0x7bE2cA3B7be499546f3f31605f4818D70d14439A\"" }, { name: 'followRule'; type: { kind: 'INPUT_OBJECT'; name: 'FollowRulesInput'; ofType: null; }; defaultValue: null }, { name: 'graphRule'; type: { kind: 'INPUT_OBJECT'; name: 'GraphRulesInput'; ofType: null; }; defaultValue: null }]; };
    'CreateFrameEIP712TypedData': { kind: 'OBJECT'; name: 'CreateFrameEIP712TypedData'; fields: { 'domain': { name: 'domain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Eip712TypedDataDomain'; ofType: null; }; } }; 'types': { name: 'types'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CreateFrameEIP712TypedDataTypes'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CreateFrameEIP712TypedDataValue'; ofType: null; }; } }; }; };
    'CreateFrameEIP712TypedDataInput': { kind: 'INPUT_OBJECT'; name: 'CreateFrameEIP712TypedDataInput'; isOneOf: false; inputFields: [{ name: 'types'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CreateFrameEIP712TypedDataTypesInput'; ofType: null; }; }; defaultValue: null }, { name: 'domain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'Eip712TypedDataDomainInput'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CreateFrameEIP712TypedDataValueInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateFrameEIP712TypedDataTypes': { kind: 'OBJECT'; name: 'CreateFrameEIP712TypedDataTypes'; fields: { 'frameData': { name: 'frameData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Eip712TypedDataField'; ofType: null; }; }; }; } }; }; };
    'CreateFrameEIP712TypedDataTypesInput': { kind: 'INPUT_OBJECT'; name: 'CreateFrameEIP712TypedDataTypesInput'; isOneOf: false; inputFields: [{ name: 'frameData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'Eip712TypedDataFieldInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'CreateFrameEIP712TypedDataValue': { kind: 'OBJECT'; name: 'CreateFrameEIP712TypedDataValue'; fields: { 'account': { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'actionResponse': { name: 'actionResponse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'buttonIndex': { name: 'buttonIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'deadline': { name: 'deadline'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'inputText': { name: 'inputText'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'postId': { name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; } }; 'specVersion': { name: 'specVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URI'; ofType: null; }; } }; }; };
    'CreateFrameEIP712TypedDataValueInput': { kind: 'INPUT_OBJECT'; name: 'CreateFrameEIP712TypedDataValueInput'; isOneOf: false; inputFields: [{ name: 'specVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URI'; ofType: null; }; }; defaultValue: null }, { name: 'buttonIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }, { name: 'inputText'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'actionResponse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'deadline'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'CreatePostRequest': { kind: 'INPUT_OBJECT'; name: 'CreatePostRequest'; isOneOf: false; inputFields: [{ name: 'feed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: "\"0xa8E1e68E3195d8e150A95CF2D0F0AfaE154f8fa5\"" }, { name: 'contentUri'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URI'; ofType: null; }; }; defaultValue: null }, { name: 'quoteOf'; type: { kind: 'INPUT_OBJECT'; name: 'ReferencingPostInput'; ofType: null; }; defaultValue: null }, { name: 'commentOn'; type: { kind: 'INPUT_OBJECT'; name: 'ReferencingPostInput'; ofType: null; }; defaultValue: null }, { name: 'actions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PostActionInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'CreateRepostRequest': { kind: 'INPUT_OBJECT'; name: 'CreateRepostRequest'; isOneOf: false; inputFields: [{ name: 'feed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: "\"0xa8E1e68E3195d8e150A95CF2D0F0AfaE154f8fa5\"" }, { name: 'post'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }]; };
    'CreateUnfollowRequest': { kind: 'INPUT_OBJECT'; name: 'CreateUnfollowRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'graph'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: "\"0x7bE2cA3B7be499546f3f31605f4818D70d14439A\"" }, { name: 'graphRule'; type: { kind: 'INPUT_OBJECT'; name: 'GraphRulesInput'; ofType: null; }; defaultValue: null }]; };
    'CurrencyRequest': { kind: 'INPUT_OBJECT'; name: 'CurrencyRequest'; isOneOf: false; inputFields: [{ name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'verified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'Cursor': unknown;
    'DateTime': unknown;
    'DebugPostMetadataRequest': { kind: 'INPUT_OBJECT'; name: 'DebugPostMetadataRequest'; isOneOf: false; inputFields: [{ name: 'rawUri'; type: { kind: 'SCALAR'; name: 'URI'; ofType: null; }; defaultValue: null }, { name: 'json'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'source'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EntityType'; ofType: null; }; }; defaultValue: null }]; };
    'DebugPostMetadataResult': { kind: 'OBJECT'; name: 'DebugPostMetadataResult'; fields: { 'reason': { name: 'reason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'valid': { name: 'valid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DebugTransactionStatusRequest': { kind: 'INPUT_OBJECT'; name: 'DebugTransactionStatusRequest'; isOneOf: false; inputFields: [{ name: 'txHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TxHash'; ofType: null; }; }; defaultValue: null }]; };
    'DebugTransactionStatusResult': { kind: 'OBJECT'; name: 'DebugTransactionStatusResult'; fields: { 'blockExplorer': { name: 'blockExplorer'; type: { kind: 'SCALAR'; name: 'URI'; ofType: null; } }; 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DeletePostRequest': { kind: 'INPUT_OBJECT'; name: 'DeletePostRequest'; isOneOf: false; inputFields: [{ name: 'post'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }, { name: 'feedRules'; type: { kind: 'INPUT_OBJECT'; name: 'FeedRulesInput'; ofType: null; }; defaultValue: null }]; };
    'DeletePostResponse': { kind: 'OBJECT'; name: 'DeletePostResponse'; fields: { 'hash': { name: 'hash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TxHash'; ofType: null; }; } }; }; };
    'DeletePostResult': { kind: 'UNION'; name: 'DeletePostResult'; fields: {}; possibleTypes: 'DeletePostResponse' | 'SponsoredTransactionRequest' | 'TransactionRequest' | 'TransactionWillFail'; };
    'DismissRecommendedAccountsRequest': { kind: 'INPUT_OBJECT'; name: 'DismissRecommendedAccountsRequest'; isOneOf: false; inputFields: [{ name: 'accounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'DisputedReport': { kind: 'OBJECT'; name: 'DisputedReport'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'disputeReason': { name: 'disputeReason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'disputer': { name: 'disputer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; 'reportAdditionalInfo': { name: 'reportAdditionalInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'reportReason': { name: 'reportReason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'reportSubreason': { name: 'reportSubreason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'reportedAccount': { name: 'reportedAccount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; 'reportedPost': { name: 'reportedPost'; type: { kind: 'OBJECT'; name: 'Post'; ofType: null; } }; 'reporter': { name: 'reporter'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; }; };
    'EditPostRequest': { kind: 'INPUT_OBJECT'; name: 'EditPostRequest'; isOneOf: false; inputFields: [{ name: 'post'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }, { name: 'contentUri'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URI'; ofType: null; }; }; defaultValue: null }]; };
    'Eip1559TransactionRequest': { kind: 'OBJECT'; name: 'Eip1559TransactionRequest'; fields: { 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'data': { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BlockchainData'; ofType: null; }; } }; 'gasLimit': { name: 'gasLimit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'maxFeePerGas': { name: 'maxFeePerGas'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'maxPriorityFeePerGas': { name: 'maxPriorityFeePerGas'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'nonce': { name: 'nonce'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'to': { name: 'to'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; }; };
    'Eip712Meta': { kind: 'OBJECT'; name: 'Eip712Meta'; fields: { 'customSignature': { name: 'customSignature'; type: { kind: 'SCALAR'; name: 'BlockchainData'; ofType: null; } }; 'factoryDeps': { name: 'factoryDeps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BlockchainData'; ofType: null; }; }; }; } }; 'gasPerPubdata': { name: 'gasPerPubdata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'paymasterParams': { name: 'paymasterParams'; type: { kind: 'OBJECT'; name: 'PaymasterParams'; ofType: null; } }; }; };
    'Eip712TransactionRequest': { kind: 'OBJECT'; name: 'Eip712TransactionRequest'; fields: { 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'customData': { name: 'customData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Eip712Meta'; ofType: null; }; } }; 'data': { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BlockchainData'; ofType: null; }; } }; 'from': { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'gasLimit': { name: 'gasLimit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'gasPrice': { name: 'gasPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'nonce': { name: 'nonce'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'to': { name: 'to'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; }; };
    'Eip712TypedDataDomain': { kind: 'OBJECT'; name: 'Eip712TypedDataDomain'; fields: { 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'verifyingContract': { name: 'verifyingContract'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Eip712TypedDataDomainInput': { kind: 'INPUT_OBJECT'; name: 'Eip712TypedDataDomainInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'verifyingContract'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'Eip712TypedDataField': { kind: 'OBJECT'; name: 'Eip712TypedDataField'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Eip712TypedDataFieldInput': { kind: 'INPUT_OBJECT'; name: 'Eip712TypedDataFieldInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'EncodedTransaction': unknown;
    'EntityType': { name: 'EntityType'; enumValues: 'ACCOUNT' | 'GRAPH' | 'FEED' | 'USERNAME' | 'GROUP' | 'POST' | 'APP' | 'SPONSORSHIP'; };
    'Erc20': { kind: 'OBJECT'; name: 'Erc20'; fields: { 'contract': { name: 'contract'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NetworkAddress'; ofType: null; }; } }; 'decimals': { name: 'decimals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'symbol': { name: 'symbol'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'EvmAddress': unknown;
    'ExpiredChallengeError': { kind: 'OBJECT'; name: 'ExpiredChallengeError'; fields: { 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FeeFollowRuleInput': { kind: 'INPUT_OBJECT'; name: 'FeeFollowRuleInput'; isOneOf: false; inputFields: [{ name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AmountInput'; ofType: null; }; }; defaultValue: null }]; };
    'Feed': { kind: 'OBJECT'; name: 'Feed'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; }; };
    'FeedRequest': { kind: 'INPUT_OBJECT'; name: 'FeedRequest'; isOneOf: false; inputFields: [{ name: 'feed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'FeedRulesInput': { kind: 'INPUT_OBJECT'; name: 'FeedRulesInput'; isOneOf: false; inputFields: [{ name: 'unknownFeedRule'; type: { kind: 'INPUT_OBJECT'; name: 'UnknownFeedRuleInput'; ofType: null; }; defaultValue: null }]; };
    'Float': unknown;
    'FollowPair': { kind: 'INPUT_OBJECT'; name: 'FollowPair'; isOneOf: false; inputFields: [{ name: 'graph'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'follower'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'FollowResponse': { kind: 'OBJECT'; name: 'FollowResponse'; fields: { 'hash': { name: 'hash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TxHash'; ofType: null; }; } }; }; };
    'FollowResult': { kind: 'UNION'; name: 'FollowResult'; fields: {}; possibleTypes: 'FollowResponse' | 'SponsoredTransactionRequest' | 'TransactionRequest' | 'TransactionWillFail'; };
    'FollowRule': { kind: 'OBJECT'; name: 'FollowRule'; fields: { 'contract': { name: 'contract'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NetworkAddress'; ofType: null; }; } }; 'moduleName': { name: 'moduleName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FollowRulesInput': { kind: 'INPUT_OBJECT'; name: 'FollowRulesInput'; isOneOf: false; inputFields: [{ name: 'feeFollowRule'; type: { kind: 'INPUT_OBJECT'; name: 'FeeFollowRuleInput'; ofType: null; }; defaultValue: null }, { name: 'unknownFollowRule'; type: { kind: 'INPUT_OBJECT'; name: 'UnknownFollowRuleInput'; ofType: null; }; defaultValue: null }]; };
    'FollowRulesRequest': { kind: 'INPUT_OBJECT'; name: 'FollowRulesRequest'; isOneOf: false; inputFields: [{ name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'includeUnknown'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'onlyVerified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'FollowStatusRequest': { kind: 'INPUT_OBJECT'; name: 'FollowStatusRequest'; isOneOf: false; inputFields: [{ name: 'pairs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FollowPair'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'FollowStatusResult': { kind: 'OBJECT'; name: 'FollowStatusResult'; fields: { 'account': { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'follower': { name: 'follower'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'graph': { name: 'graph'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'isFollowing': { name: 'isFollowing'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BooleanValue'; ofType: null; }; } }; }; };
    'FollowersOrderBy': { name: 'FollowersOrderBy'; enumValues: 'APPS_OR_GRAPHS_FILTER_ORDER' | 'ACCOUNT_SCORE'; };
    'FollowersRequest': { kind: 'INPUT_OBJECT'; name: 'FollowersRequest'; isOneOf: false; inputFields: [{ name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'forGraphs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: "[\"0x7bE2cA3B7be499546f3f31605f4818D70d14439A\"]" }, { name: 'orderBy'; type: { kind: 'ENUM'; name: 'FollowersOrderBy'; ofType: null; }; defaultValue: null }]; };
    'FollowersYouKnowOrderBy': { name: 'FollowersYouKnowOrderBy'; enumValues: 'APPS_OR_GRAPHS_FILTER_ORDER' | 'ACCOUNT_SCORE'; };
    'FollowersYouKnowRequest': { kind: 'INPUT_OBJECT'; name: 'FollowersYouKnowRequest'; isOneOf: false; inputFields: [{ name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'target'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'observer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'forGraphs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: "[\"0x7bE2cA3B7be499546f3f31605f4818D70d14439A\"]" }, { name: 'orderBy'; type: { kind: 'ENUM'; name: 'FollowersYouKnowOrderBy'; ofType: null; }; defaultValue: null }]; };
    'FollowingOrderBy': { name: 'FollowingOrderBy'; enumValues: 'APPS_OR_GRAPHS_FILTER_ORDER' | 'ACCOUNT_SCORE'; };
    'FollowingRequest': { kind: 'INPUT_OBJECT'; name: 'FollowingRequest'; isOneOf: false; inputFields: [{ name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'forGraphs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: "[\"0x7bE2cA3B7be499546f3f31605f4818D70d14439A\"]" }, { name: 'orderBy'; type: { kind: 'ENUM'; name: 'FollowingOrderBy'; ofType: null; }; defaultValue: null }]; };
    'ForYouSource': { name: 'ForYouSource'; enumValues: 'FOLLOWING' | 'CURATED' | 'POPULAR' | 'EXTENDED_NETWORK'; };
    'ForbiddenError': { kind: 'OBJECT'; name: 'ForbiddenError'; fields: { 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FrameEIP712Request': { kind: 'INPUT_OBJECT'; name: 'FrameEIP712Request'; isOneOf: false; inputFields: [{ name: 'specVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URI'; ofType: null; }; }; defaultValue: null }, { name: 'buttonIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }, { name: 'inputText'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'actionResponse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'deadline'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'FrameLensManagerEIP712Request': { kind: 'INPUT_OBJECT'; name: 'FrameLensManagerEIP712Request'; isOneOf: false; inputFields: [{ name: 'specVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URI'; ofType: null; }; }; defaultValue: null }, { name: 'buttonIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }, { name: 'inputText'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'actionResponse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'FrameLensManagerSignatureResult': { kind: 'OBJECT'; name: 'FrameLensManagerSignatureResult'; fields: { 'signature': { name: 'signature'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Signature'; ofType: null; }; } }; 'signedTypedData': { name: 'signedTypedData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CreateFrameEIP712TypedData'; ofType: null; }; } }; }; };
    'FrameVerifySignature': { kind: 'INPUT_OBJECT'; name: 'FrameVerifySignature'; isOneOf: false; inputFields: [{ name: 'signedTypedData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CreateFrameEIP712TypedDataInput'; ofType: null; }; }; defaultValue: null }, { name: 'signature'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Signature'; ofType: null; }; }; defaultValue: null }, { name: 'identityToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IdToken'; ofType: null; }; }; defaultValue: null }]; };
    'FrameVerifySignatureResult': { name: 'FrameVerifySignatureResult'; enumValues: 'VERIFIED' | 'IDENTITY_UNAUTHORIZED' | 'IDENTITY_CANNOT_USE_PROFILE' | 'DEADLINE_EXPIRED' | 'SIGNER_ADDRESS_CANNOT_USE_PROFILE'; };
    'Graph': { kind: 'OBJECT'; name: 'Graph'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'OBJECT'; name: 'GraphMetadata'; ofType: null; } }; }; };
    'GraphMetadata': { kind: 'OBJECT'; name: 'GraphMetadata'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'GraphRequest': { kind: 'INPUT_OBJECT'; name: 'GraphRequest'; isOneOf: false; inputFields: [{ name: 'graph'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'GraphRulesInput': { kind: 'INPUT_OBJECT'; name: 'GraphRulesInput'; isOneOf: false; inputFields: [{ name: 'unknownGraphRule'; type: { kind: 'INPUT_OBJECT'; name: 'UnknownGraphRuleInput'; ofType: null; }; defaultValue: null }]; };
    'GraphsRequest': { kind: 'INPUT_OBJECT'; name: 'GraphsRequest'; isOneOf: false; inputFields: [{ name: 'app'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; defaultValue: null }, { name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }]; };
    'HasReactedRequest': { kind: 'INPUT_OBJECT'; name: 'HasReactedRequest'; isOneOf: false; inputFields: [{ name: 'type'; type: { kind: 'ENUM'; name: 'PostReactionType'; ofType: null; }; defaultValue: null }]; };
    'HideManagedAccountRequest': { kind: 'INPUT_OBJECT'; name: 'HideManagedAccountRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'HideReplyRequest': { kind: 'INPUT_OBJECT'; name: 'HideReplyRequest'; isOneOf: false; inputFields: [{ name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }]; };
    'ID': unknown;
    'IdToken': unknown;
    'ImageMetadataV3': { kind: 'OBJECT'; name: 'ImageMetadataV3'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Int': unknown;
    'IsFollowedByMeRequest': { kind: 'INPUT_OBJECT'; name: 'IsFollowedByMeRequest'; isOneOf: false; inputFields: [{ name: 'appOrGraph'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'IsFollowingMeRequest': { kind: 'INPUT_OBJECT'; name: 'IsFollowingMeRequest'; isOneOf: false; inputFields: [{ name: 'appOrGraph'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'KnownAction': { kind: 'OBJECT'; name: 'KnownAction'; fields: { 'actionInput': { name: 'actionInput'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ActionInputInfo'; ofType: null; }; }; }; } }; 'contract': { name: 'contract'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NetworkAddress'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'returnSetupInput': { name: 'returnSetupInput'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ActionInputInfo'; ofType: null; }; }; }; } }; 'setupInput': { name: 'setupInput'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ActionInputInfo'; ofType: null; }; }; }; } }; }; };
    'LastLoggedInAccountRequest': { kind: 'INPUT_OBJECT'; name: 'LastLoggedInAccountRequest'; isOneOf: false; inputFields: [{ name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'app'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; defaultValue: null }]; };
    'LegacyProfileId': unknown;
    'LegacyRefreshToken': unknown;
    'LoggedInAccountOperations': { kind: 'OBJECT'; name: 'LoggedInAccountOperations'; fields: { 'canBlock': { name: 'canBlock'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'canFollow': { name: 'canFollow'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TriStateValue'; ofType: null; }; } }; 'canUnblock': { name: 'canUnblock'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'canUnfollow': { name: 'canUnfollow'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasBlockedMe': { name: 'hasBlockedMe'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasReported': { name: 'hasReported'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isBlockedByMe': { name: 'isBlockedByMe'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isFollowedByMe': { name: 'isFollowedByMe'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isFollowingMe': { name: 'isFollowingMe'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isMutedByMe': { name: 'isMutedByMe'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'LoggedInPostOperations': { kind: 'OBJECT'; name: 'LoggedInPostOperations'; fields: { 'canComment': { name: 'canComment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TriStateValue'; ofType: null; }; } }; 'canQuote': { name: 'canQuote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TriStateValue'; ofType: null; }; } }; 'canRepost': { name: 'canRepost'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TriStateValue'; ofType: null; }; } }; 'hasBookmarked': { name: 'hasBookmarked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasCommented': { name: 'hasCommented'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BooleanValue'; ofType: null; }; } }; 'hasQuoted': { name: 'hasQuoted'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BooleanValue'; ofType: null; }; } }; 'hasReacted': { name: 'hasReacted'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasReported': { name: 'hasReported'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasReposted': { name: 'hasReposted'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BooleanValue'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isNotInterested': { name: 'isNotInterested'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ManagedAccountsVisibility': { name: 'ManagedAccountsVisibility'; enumValues: 'NONE_HIDDEN' | 'HIDDEN_ONLY' | 'ALL'; };
    'MlaccountRecommendationsRequest': { kind: 'INPUT_OBJECT'; name: 'MlaccountRecommendationsRequest'; isOneOf: false; inputFields: [{ name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'shuffle'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'MlexplorePostsFilter': { kind: 'INPUT_OBJECT'; name: 'MlexplorePostsFilter'; isOneOf: false; inputFields: [{ name: 'since'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'MlexplorePostsRequest': { kind: 'INPUT_OBJECT'; name: 'MlexplorePostsRequest'; isOneOf: false; inputFields: [{ name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'MlexplorePostsFilter'; ofType: null; }; defaultValue: null }]; };
    'MlpostsForYouRequest': { kind: 'INPUT_OBJECT'; name: 'MlpostsForYouRequest'; isOneOf: false; inputFields: [{ name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'shuffle'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'ModFollowerResult': { kind: 'OBJECT'; name: 'ModFollowerResult'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'follower': { name: 'follower'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; 'following': { name: 'following'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; }; };
    'ModReport': { kind: 'OBJECT'; name: 'ModReport'; fields: { 'additionalInfo': { name: 'additionalInfo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'reportedAccount': { name: 'reportedAccount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; 'reportedPost': { name: 'reportedPost'; type: { kind: 'OBJECT'; name: 'Post'; ofType: null; } }; 'reporter': { name: 'reporter'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; 'subreason': { name: 'subreason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ModReportsRequest': { kind: 'INPUT_OBJECT'; name: 'ModReportsRequest'; isOneOf: false; inputFields: [{ name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'account'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; defaultValue: null }, { name: 'postId'; type: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; defaultValue: null }]; };
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'addReaction': { name: 'addReaction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'assignUsernameToAccount': { name: 'assignUsernameToAccount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'AssignUsernameToAccountResult'; ofType: null; }; } }; 'authenticate': { name: 'authenticate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'AuthenticationResult'; ofType: null; }; } }; 'block': { name: 'block'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'BlockResult'; ofType: null; }; } }; 'bookmarkPost': { name: 'bookmarkPost'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'challenge': { name: 'challenge'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AuthenticationChallenge'; ofType: null; }; } }; 'deletePost': { name: 'deletePost'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DeletePostResult'; ofType: null; }; } }; 'editPost': { name: 'editPost'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PostResult'; ofType: null; }; } }; 'follow': { name: 'follow'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'FollowResult'; ofType: null; }; } }; 'hideManagedAccount': { name: 'hideManagedAccount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'hideReply': { name: 'hideReply'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'mlAddPostNotInterested': { name: 'mlAddPostNotInterested'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'mlDismissRecommendedAccounts': { name: 'mlDismissRecommendedAccounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'mlUndoPostNotInterested': { name: 'mlUndoPostNotInterested'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'mute': { name: 'mute'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'post': { name: 'post'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PostResult'; ofType: null; }; } }; 'recommendAccount': { name: 'recommendAccount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'refresh': { name: 'refresh'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'RefreshResult'; ofType: null; }; } }; 'reportAccount': { name: 'reportAccount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'reportPost': { name: 'reportPost'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'repost': { name: 'repost'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PostResult'; ofType: null; }; } }; 'revokeAuthentication': { name: 'revokeAuthentication'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'rolloverRefresh': { name: 'rolloverRefresh'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'RefreshResult'; ofType: null; }; } }; 'setAccountFollowRule': { name: 'setAccountFollowRule'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'AccountFollowRuleResult'; ofType: null; }; } }; 'setAccountMetadata': { name: 'setAccountMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SetAccountMetadataResult'; ofType: null; }; } }; 'signFrameAction': { name: 'signFrameAction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FrameLensManagerSignatureResult'; ofType: null; }; } }; 'switchAccount': { name: 'switchAccount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SwitchAccountResult'; ofType: null; }; } }; 'unassignUsernameFromAccount': { name: 'unassignUsernameFromAccount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'UnassignUsernameFromAccountResult'; ofType: null; }; } }; 'unblock': { name: 'unblock'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'UnblockResult'; ofType: null; }; } }; 'undoBookmarkPost': { name: 'undoBookmarkPost'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'undoRecommendedAccount': { name: 'undoRecommendedAccount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'unfollow': { name: 'unfollow'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'UnfollowResult'; ofType: null; }; } }; 'unhideManagedAccount': { name: 'unhideManagedAccount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'unhideReply': { name: 'unhideReply'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'unmute': { name: 'unmute'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; }; };
    'MuteRequest': { kind: 'INPUT_OBJECT'; name: 'MuteRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'NestedPost': { kind: 'UNION'; name: 'NestedPost'; fields: {}; possibleTypes: 'Post' | 'PostReference'; };
    'NetworkAddress': { kind: 'OBJECT'; name: 'NetworkAddress'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'OptimisticAccountFollowRule': { kind: 'OBJECT'; name: 'OptimisticAccountFollowRule'; fields: { 'txHash': { name: 'txHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TxHash'; ofType: null; }; } }; }; };
    'OptimisticAssignUsernameToAccount': { kind: 'OBJECT'; name: 'OptimisticAssignUsernameToAccount'; fields: { 'txHash': { name: 'txHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TxHash'; ofType: null; }; } }; }; };
    'OptimisticBlock': { kind: 'OBJECT'; name: 'OptimisticBlock'; fields: { 'txHash': { name: 'txHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TxHash'; ofType: null; }; } }; }; };
    'OptimisticUnassignUsernameFromAccount': { kind: 'OBJECT'; name: 'OptimisticUnassignUsernameFromAccount'; fields: { 'txHash': { name: 'txHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TxHash'; ofType: null; }; } }; }; };
    'OptimisticUnblock': { kind: 'OBJECT'; name: 'OptimisticUnblock'; fields: { 'txHash': { name: 'txHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TxHash'; ofType: null; }; } }; }; };
    'PageSize': { name: 'PageSize'; enumValues: 'TEN' | 'FIFTY'; };
    'PaginatedAccountManagersResult': { kind: 'OBJECT'; name: 'PaginatedAccountManagersResult'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountManager'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedAccountsBlockedResult': { kind: 'OBJECT'; name: 'PaginatedAccountsBlockedResult'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountBlocked'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedAccountsManagedResult': { kind: 'OBJECT'; name: 'PaginatedAccountsManagedResult'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountManaged'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedAccountsResult': { kind: 'OBJECT'; name: 'PaginatedAccountsResult'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedActions': { kind: 'OBJECT'; name: 'PaginatedActions'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'ActionInfo'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedActiveAuthenticationsResult': { kind: 'OBJECT'; name: 'PaginatedActiveAuthenticationsResult'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ActiveAuthentication'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedAppsResult': { kind: 'OBJECT'; name: 'PaginatedAppsResult'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedCurrenciesResult': { kind: 'OBJECT'; name: 'PaginatedCurrenciesResult'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Erc20'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedDisputedReports': { kind: 'OBJECT'; name: 'PaginatedDisputedReports'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DisputedReport'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedFollowRules': { kind: 'OBJECT'; name: 'PaginatedFollowRules'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FollowRule'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedGraphsResult': { kind: 'OBJECT'; name: 'PaginatedGraphsResult'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Graph'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedModFollowersResult': { kind: 'OBJECT'; name: 'PaginatedModFollowersResult'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ModFollowerResult'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedModReports': { kind: 'OBJECT'; name: 'PaginatedModReports'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ModReport'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedPostReactionsResult': { kind: 'OBJECT'; name: 'PaginatedPostReactionsResult'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountPostReaction'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedPostTagsResult': { kind: 'OBJECT'; name: 'PaginatedPostTagsResult'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Tag'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedPostsForYouResult': { kind: 'OBJECT'; name: 'PaginatedPostsForYouResult'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostForYou'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedPostsResult': { kind: 'OBJECT'; name: 'PaginatedPostsResult'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Post'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedQuery': { kind: 'INPUT_OBJECT'; name: 'PaginatedQuery'; isOneOf: false; inputFields: [{ name: 'pageSize'; type: { kind: 'ENUM'; name: 'PageSize'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }]; };
    'PaginatedResultInfo': { kind: 'OBJECT'; name: 'PaginatedResultInfo'; fields: { 'next': { name: 'next'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'prev': { name: 'prev'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; }; };
    'PaginatedTimelineResult': { kind: 'OBJECT'; name: 'PaginatedTimelineResult'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TimelineItem'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaginatedUsernamesResult': { kind: 'OBJECT'; name: 'PaginatedUsernamesResult'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountUsername'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedResultInfo'; ofType: null; }; } }; }; };
    'PaymasterParams': { kind: 'OBJECT'; name: 'PaymasterParams'; fields: { 'paymaster': { name: 'paymaster'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'paymasterInput': { name: 'paymasterInput'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BlockchainData'; ofType: null; }; } }; }; };
    'Post': { kind: 'OBJECT'; name: 'Post'; fields: { 'actions': { name: 'actions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PostAction'; ofType: null; }; }; }; } }; 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'author': { name: 'author'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; 'commentOn': { name: 'commentOn'; type: { kind: 'UNION'; name: 'NestedPost'; ofType: null; } }; 'feed': { name: 'feed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Feed'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PostMetadata'; ofType: null; }; } }; 'operations': { name: 'operations'; type: { kind: 'OBJECT'; name: 'LoggedInPostOperations'; ofType: null; } }; 'quoteOf': { name: 'quoteOf'; type: { kind: 'UNION'; name: 'NestedPost'; ofType: null; } }; 'root': { name: 'root'; type: { kind: 'UNION'; name: 'NestedPost'; ofType: null; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'PostAccountPair': { kind: 'INPUT_OBJECT'; name: 'PostAccountPair'; isOneOf: false; inputFields: [{ name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }, { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'PostAction': { kind: 'UNION'; name: 'PostAction'; fields: {}; possibleTypes: 'SimpleCollectActionSettings' | 'UnknownActionSettings'; };
    'PostActionCategoryType': { name: 'PostActionCategoryType'; enumValues: 'COLLECT'; };
    'PostActionInput': { kind: 'INPUT_OBJECT'; name: 'PostActionInput'; isOneOf: false; inputFields: [{ name: 'collectAction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CollectActionInput'; ofType: null; }; }; defaultValue: null }, { name: 'unknownAction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UnknownActionInput'; ofType: null; }; }; defaultValue: null }]; };
    'PostActionType': { name: 'PostActionType'; enumValues: 'SIMPLE_COLLECT_ACTION' | 'UNKNOWN_ACTION'; };
    'PostActionsRequest': { kind: 'INPUT_OBJECT'; name: 'PostActionsRequest'; isOneOf: false; inputFields: [{ name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'includeUnknown'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'includeOnlyCollectActions'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'onlyVerified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'PostBookmarksFilter': { kind: 'INPUT_OBJECT'; name: 'PostBookmarksFilter'; isOneOf: false; inputFields: [{ name: 'metadata'; type: { kind: 'INPUT_OBJECT'; name: 'PostMetadataFilter'; ofType: null; }; defaultValue: null }]; };
    'PostBookmarksRequest': { kind: 'INPUT_OBJECT'; name: 'PostBookmarksRequest'; isOneOf: false; inputFields: [{ name: 'forFeeds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: "[\"0xa8E1e68E3195d8e150A95CF2D0F0AfaE154f8fa5\"]" }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'PostBookmarksFilter'; ofType: null; }; defaultValue: null }, { name: 'pageSize'; type: { kind: 'ENUM'; name: 'PageSize'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }]; };
    'PostContentWarningType': { name: 'PostContentWarningType'; enumValues: 'NSFW' | 'SENSITIVE' | 'SPOILER'; };
    'PostForYou': { kind: 'OBJECT'; name: 'PostForYou'; fields: { 'post': { name: 'post'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Post'; ofType: null; }; } }; 'source': { name: 'source'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ForYouSource'; ofType: null; }; } }; }; };
    'PostId': unknown;
    'PostMainContentFocus': { name: 'PostMainContentFocus'; enumValues: 'TEXT' | 'IMAGE' | 'VIDEO' | 'AUDIO' | 'FILE'; };
    'PostMetadata': { kind: 'UNION'; name: 'PostMetadata'; fields: {}; possibleTypes: 'ImageMetadataV3' | 'TextOnlyMetadataV3' | 'VideoMetadataV3'; };
    'PostMetadataContentWarningFilter': { kind: 'INPUT_OBJECT'; name: 'PostMetadataContentWarningFilter'; isOneOf: false; inputFields: [{ name: 'oneOf'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PostContentWarningType'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'PostMetadataFilter': { kind: 'INPUT_OBJECT'; name: 'PostMetadataFilter'; isOneOf: false; inputFields: [{ name: 'mainContentFocus'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PostMainContentFocus'; ofType: null; }; }; }; defaultValue: null }, { name: 'tags'; type: { kind: 'INPUT_OBJECT'; name: 'PostMetadataTagsFilter'; ofType: null; }; defaultValue: null }, { name: 'contentWarning'; type: { kind: 'INPUT_OBJECT'; name: 'PostMetadataContentWarningFilter'; ofType: null; }; defaultValue: null }]; };
    'PostMetadataTagsFilter': { kind: 'INPUT_OBJECT'; name: 'PostMetadataTagsFilter'; isOneOf: false; inputFields: [{ name: 'oneOf'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'all'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'PostNotInterestedRequest': { kind: 'INPUT_OBJECT'; name: 'PostNotInterestedRequest'; isOneOf: false; inputFields: [{ name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }]; };
    'PostReaction': { kind: 'OBJECT'; name: 'PostReaction'; fields: { 'reactedAt': { name: 'reactedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'reaction': { name: 'reaction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PostReactionType'; ofType: null; }; } }; }; };
    'PostReactionOrderBy': { name: 'PostReactionOrderBy'; enumValues: 'DEFAULT' | 'ACCOUNT_SCORE'; };
    'PostReactionStatus': { kind: 'OBJECT'; name: 'PostReactionStatus'; fields: { 'account': { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'postId': { name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; } }; 'result': { name: 'result'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'PostReactionStatusRequest': { kind: 'INPUT_OBJECT'; name: 'PostReactionStatusRequest'; isOneOf: false; inputFields: [{ name: 'pairs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PostAccountPair'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'PostReactionsFilter'; ofType: null; }; defaultValue: null }]; };
    'PostReactionType': { name: 'PostReactionType'; enumValues: 'UPVOTE' | 'DOWNVOTE'; };
    'PostReactionsFilter': { kind: 'INPUT_OBJECT'; name: 'PostReactionsFilter'; isOneOf: false; inputFields: [{ name: 'anyOf'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PostReactionType'; ofType: null; }; }; }; defaultValue: null }]; };
    'PostReactionsRequest': { kind: 'INPUT_OBJECT'; name: 'PostReactionsRequest'; isOneOf: false; inputFields: [{ name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'PostReactionsFilter'; ofType: null; }; defaultValue: null }, { name: 'orderBy'; type: { kind: 'ENUM'; name: 'PostReactionOrderBy'; ofType: null; }; defaultValue: null }, { name: 'pageSize'; type: { kind: 'ENUM'; name: 'PageSize'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }]; };
    'PostReference': { kind: 'OBJECT'; name: 'PostReference'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; } }; }; };
    'PostReferenceType': { name: 'PostReferenceType'; enumValues: 'COMMENT_ON' | 'REPOST_OF' | 'QUOTE_OF'; };
    'PostReferencesRequest': { kind: 'INPUT_OBJECT'; name: 'PostReferencesRequest'; isOneOf: false; inputFields: [{ name: 'referencePostId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }, { name: 'referenceTypes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PostReferenceType'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'pageSize'; type: { kind: 'ENUM'; name: 'PageSize'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }]; };
    'PostReportReason': { name: 'PostReportReason'; enumValues: 'ANIMAL_ABUSE' | 'HARASSMENT' | 'VIOLENCE' | 'SELF_HARM' | 'DIRECT_THREAT' | 'HATE_SPEECH' | 'NUDITY' | 'OFFENSIVE' | 'SCAM' | 'UNAUTHORIZED_SALE' | 'IMPERSONATION' | 'MISLEADING' | 'MISUSE_HASHTAGS' | 'UNRELATED' | 'REPETITIVE' | 'FAKE_ENGAGEMENT' | 'MANIPULATION_ALGO' | 'SOMETHING_ELSE'; };
    'PostRequest': { kind: 'INPUT_OBJECT'; name: 'PostRequest'; isOneOf: false; inputFields: [{ name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }]; };
    'PostResponse': { kind: 'OBJECT'; name: 'PostResponse'; fields: { 'hash': { name: 'hash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TxHash'; ofType: null; }; } }; }; };
    'PostResult': { kind: 'UNION'; name: 'PostResult'; fields: {}; possibleTypes: 'PostResponse' | 'SponsoredTransactionRequest' | 'TransactionRequest' | 'TransactionWillFail'; };
    'PostTagsOrderBy': { name: 'PostTagsOrderBy'; enumValues: 'MOST_POPULAR' | 'ALPHABETICAL'; };
    'PostTagsRequest': { kind: 'INPUT_OBJECT'; name: 'PostTagsRequest'; isOneOf: false; inputFields: [{ name: 'forFeeds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: "[\"0xa8E1e68E3195d8e150A95CF2D0F0AfaE154f8fa5\"]" }, { name: 'orderBy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PostTagsOrderBy'; ofType: null; }; }; defaultValue: "MOST_POPULAR" }, { name: 'pageSize'; type: { kind: 'ENUM'; name: 'PageSize'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }]; };
    'PostType': { name: 'PostType'; enumValues: 'ROOT' | 'COMMENT' | 'REPOST' | 'QUOTE'; };
    'PostsFilterRequest': { kind: 'INPUT_OBJECT'; name: 'PostsFilterRequest'; isOneOf: false; inputFields: [{ name: 'authors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; defaultValue: null }, { name: 'postTypes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PostType'; ofType: null; }; }; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'INPUT_OBJECT'; name: 'PostMetadataFilter'; ofType: null; }; defaultValue: null }, { name: 'apps'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; defaultValue: null }]; };
    'PostsRequest': { kind: 'INPUT_OBJECT'; name: 'PostsRequest'; isOneOf: false; inputFields: [{ name: 'forFeeds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: "[\"0xa8E1e68E3195d8e150A95CF2D0F0AfaE154f8fa5\"]" }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'PostsFilterRequest'; ofType: null; }; defaultValue: null }, { name: 'pageSize'; type: { kind: 'ENUM'; name: 'PageSize'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }]; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { '_service': { name: '_service'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: '_Service'; ofType: null; }; } }; 'account': { name: 'account'; type: { kind: 'OBJECT'; name: 'Account'; ofType: null; } }; 'accountAuthentications': { name: 'accountAuthentications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedActiveAuthenticationsResult'; ofType: null; }; } }; 'accountFeedsStats': { name: 'accountFeedsStats'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountFeedsStats'; ofType: null; }; } }; 'accountGraphsStats': { name: 'accountGraphsStats'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountGraphsFollowStats'; ofType: null; }; } }; 'accountManagers': { name: 'accountManagers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedAccountManagersResult'; ofType: null; }; } }; 'accountSponsorLimit': { name: 'accountSponsorLimit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountSponsorResult'; ofType: null; }; } }; 'accountStats': { name: 'accountStats'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountStats'; ofType: null; }; } }; 'accountUsernames': { name: 'accountUsernames'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedUsernamesResult'; ofType: null; }; } }; 'accounts': { name: 'accounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; }; }; } }; 'accountsBlocked': { name: 'accountsBlocked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedAccountsBlockedResult'; ofType: null; }; } }; 'accountsManaged': { name: 'accountsManaged'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedAccountsManagedResult'; ofType: null; }; } }; 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'apps': { name: 'apps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedAppsResult'; ofType: null; }; } }; 'createFrameTypedData': { name: 'createFrameTypedData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CreateFrameEIP712TypedData'; ofType: null; }; } }; 'currencies': { name: 'currencies'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedCurrenciesResult'; ofType: null; }; } }; 'currentAuthentication': { name: 'currentAuthentication'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ActiveAuthentication'; ofType: null; }; } }; 'debugMetadata': { name: 'debugMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DebugPostMetadataResult'; ofType: null; }; } }; 'debugTransactionStatusFailed': { name: 'debugTransactionStatusFailed'; type: { kind: 'OBJECT'; name: 'DebugTransactionStatusResult'; ofType: null; } }; 'feed': { name: 'feed'; type: { kind: 'OBJECT'; name: 'Feed'; ofType: null; } }; 'followRules': { name: 'followRules'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedFollowRules'; ofType: null; }; } }; 'followStatus': { name: 'followStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FollowStatusResult'; ofType: null; }; }; }; } }; 'followers': { name: 'followers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedAccountsResult'; ofType: null; }; } }; 'followersYouKnow': { name: 'followersYouKnow'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedAccountsResult'; ofType: null; }; } }; 'following': { name: 'following'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedAccountsResult'; ofType: null; }; } }; 'graph': { name: 'graph'; type: { kind: 'OBJECT'; name: 'Graph'; ofType: null; } }; 'graphs': { name: 'graphs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedGraphsResult'; ofType: null; }; } }; 'health': { name: 'health'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'lastLoggedInAccount': { name: 'lastLoggedInAccount'; type: { kind: 'OBJECT'; name: 'Account'; ofType: null; } }; 'mlAccountRecommendations': { name: 'mlAccountRecommendations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedAccountsResult'; ofType: null; }; } }; 'mlPostsExplore': { name: 'mlPostsExplore'; type: { kind: 'OBJECT'; name: 'PaginatedPostsResult'; ofType: null; } }; 'mlPostsForYou': { name: 'mlPostsForYou'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedPostsForYouResult'; ofType: null; }; } }; 'modDisputedReports': { name: 'modDisputedReports'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedDisputedReports'; ofType: null; }; } }; 'modFollowersHistory': { name: 'modFollowersHistory'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedModFollowersResult'; ofType: null; }; } }; 'modLatestReports': { name: 'modLatestReports'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedModReports'; ofType: null; }; } }; 'post': { name: 'post'; type: { kind: 'UNION'; name: 'AnyPost'; ofType: null; } }; 'postActions': { name: 'postActions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedActions'; ofType: null; }; } }; 'postBookmarks': { name: 'postBookmarks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedPostsResult'; ofType: null; }; } }; 'postReactionStatus': { name: 'postReactionStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostReactionStatus'; ofType: null; }; }; }; } }; 'postReactions': { name: 'postReactions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedPostReactionsResult'; ofType: null; }; } }; 'postReferences': { name: 'postReferences'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedPostsResult'; ofType: null; }; } }; 'postTags': { name: 'postTags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedPostTagsResult'; ofType: null; }; } }; 'posts': { name: 'posts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedPostsResult'; ofType: null; }; } }; 'searchAccounts': { name: 'searchAccounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedAccountsResult'; ofType: null; }; } }; 'searchPosts': { name: 'searchPosts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedPostsResult'; ofType: null; }; } }; 'timeline': { name: 'timeline'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedTimelineResult'; ofType: null; }; } }; 'timelineHighlights': { name: 'timelineHighlights'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedPostsResult'; ofType: null; }; } }; 'transactionStatus': { name: 'transactionStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionStatusResult'; ofType: null; }; } }; 'verifyFrameSignature': { name: 'verifyFrameSignature'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FrameVerifySignatureResult'; ofType: null; }; } }; 'whoActedOnPost': { name: 'whoActedOnPost'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedAccountsResult'; ofType: null; }; } }; 'whoReferencedPost': { name: 'whoReferencedPost'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaginatedAccountsResult'; ofType: null; }; } }; }; };
    'ReactionRequest': { kind: 'INPUT_OBJECT'; name: 'ReactionRequest'; isOneOf: false; inputFields: [{ name: 'reaction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PostReactionType'; ofType: null; }; }; defaultValue: null }, { name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }, { name: 'app'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; defaultValue: null }]; };
    'RecipientDataInput': { kind: 'INPUT_OBJECT'; name: 'RecipientDataInput'; isOneOf: false; inputFields: [{ name: 'recipient'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'split'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }]; };
    'RecipientDataOutput': { kind: 'OBJECT'; name: 'RecipientDataOutput'; fields: { 'recipient': { name: 'recipient'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'split': { name: 'split'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'RecommendAccount': { kind: 'INPUT_OBJECT'; name: 'RecommendAccount'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'ReferencingPostInput': { kind: 'INPUT_OBJECT'; name: 'ReferencingPostInput'; isOneOf: false; inputFields: [{ name: 'post'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }]; };
    'RefreshRequest': { kind: 'INPUT_OBJECT'; name: 'RefreshRequest'; isOneOf: false; inputFields: [{ name: 'refreshToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'RefreshToken'; ofType: null; }; }; defaultValue: null }]; };
    'RefreshResult': { kind: 'UNION'; name: 'RefreshResult'; fields: {}; possibleTypes: 'AuthenticationTokens' | 'ForbiddenError'; };
    'RefreshToken': unknown;
    'ReportAccountRequest': { kind: 'INPUT_OBJECT'; name: 'ReportAccountRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'referencePost'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; }; defaultValue: null }, { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AccountReportReason'; ofType: null; }; }; defaultValue: null }, { name: 'additionalComments'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ReportPostRequest': { kind: 'INPUT_OBJECT'; name: 'ReportPostRequest'; isOneOf: false; inputFields: [{ name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }, { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PostReportReason'; ofType: null; }; }; defaultValue: null }, { name: 'additionalComments'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'Repost': { kind: 'OBJECT'; name: 'Repost'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'author': { name: 'author'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; } }; 'repostOf': { name: 'repostOf'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Post'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'RevokeAuthenticationRequest': { kind: 'INPUT_OBJECT'; name: 'RevokeAuthenticationRequest'; isOneOf: false; inputFields: [{ name: 'authenticationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; }; defaultValue: null }]; };
    'RolloverRefreshRequest': { kind: 'INPUT_OBJECT'; name: 'RolloverRefreshRequest'; isOneOf: false; inputFields: [{ name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'refreshToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'LegacyRefreshToken'; ofType: null; }; }; defaultValue: null }]; };
    'SearchPostsFilter': { kind: 'INPUT_OBJECT'; name: 'SearchPostsFilter'; isOneOf: false; inputFields: [{ name: 'postTypes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PostType'; ofType: null; }; }; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'INPUT_OBJECT'; name: 'PostMetadataFilter'; ofType: null; }; defaultValue: null }]; };
    'SearchPostsRequest': { kind: 'INPUT_OBJECT'; name: 'SearchPostsRequest'; isOneOf: false; inputFields: [{ name: 'query'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'forFeeds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: "[\"0xa8E1e68E3195d8e150A95CF2D0F0AfaE154f8fa5\"]" }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'SearchPostsFilter'; ofType: null; }; defaultValue: null }, { name: 'pageSize'; type: { kind: 'ENUM'; name: 'PageSize'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }]; };
    'SetAccountMetadataRequest': { kind: 'INPUT_OBJECT'; name: 'SetAccountMetadataRequest'; isOneOf: false; inputFields: [{ name: 'metadataUri'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URI'; ofType: null; }; }; defaultValue: null }]; };
    'SetAccountMetadataResponse': { kind: 'OBJECT'; name: 'SetAccountMetadataResponse'; fields: { 'hash': { name: 'hash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TxHash'; ofType: null; }; } }; }; };
    'SetAccountMetadataResult': { kind: 'UNION'; name: 'SetAccountMetadataResult'; fields: {}; possibleTypes: 'SetAccountMetadataResponse' | 'SponsoredTransactionRequest' | 'TransactionRequest' | 'TransactionWillFail'; };
    'Signature': unknown;
    'SignedAuthChallenge': { kind: 'INPUT_OBJECT'; name: 'SignedAuthChallenge'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; }; defaultValue: null }, { name: 'signature'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Signature'; ofType: null; }; }; defaultValue: null }]; };
    'SimpleCollectActionInput': { kind: 'INPUT_OBJECT'; name: 'SimpleCollectActionInput'; isOneOf: false; inputFields: [{ name: 'amount'; type: { kind: 'INPUT_OBJECT'; name: 'AmountInput'; ofType: null; }; defaultValue: null }, { name: 'referralFee'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'recipient'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; defaultValue: null }, { name: 'collectLimit'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'followerOnly'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'recipients'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'RecipientDataInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'SimpleCollectActionSettings': { kind: 'OBJECT'; name: 'SimpleCollectActionSettings'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Amount'; ofType: null; }; } }; 'collectLimit': { name: 'collectLimit'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'collectNft': { name: 'collectNft'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; } }; 'contract': { name: 'contract'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NetworkAddress'; ofType: null; }; } }; 'endsAt': { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'followerOnly': { name: 'followerOnly'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'recipient': { name: 'recipient'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; } }; 'recipients': { name: 'recipients'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RecipientDataOutput'; ofType: null; }; }; }; } }; 'referralFee': { name: 'referralFee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PostActionType'; ofType: null; }; } }; }; };
    'SponsorLimitType': { name: 'SponsorLimitType'; enumValues: 'HOUR' | 'DAY' | 'WEEK' | 'MONTH'; };
    'SponsoredTransactionRequest': { kind: 'OBJECT'; name: 'SponsoredTransactionRequest'; fields: { 'encoded': { name: 'encoded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EncodedTransaction'; ofType: null; }; } }; 'raw': { name: 'raw'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Eip712TransactionRequest'; ofType: null; }; } }; }; };
    'String': unknown;
    'SwitchAccountRequest': { kind: 'INPUT_OBJECT'; name: 'SwitchAccountRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'SwitchAccountResult': { kind: 'UNION'; name: 'SwitchAccountResult'; fields: {}; possibleTypes: 'AuthenticationTokens' | 'ForbiddenError'; };
    'Tag': { kind: 'OBJECT'; name: 'Tag'; fields: { 'total': { name: 'total'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TextOnlyMetadataV3': { kind: 'OBJECT'; name: 'TextOnlyMetadataV3'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TimelineEventItemType': { name: 'TimelineEventItemType'; enumValues: 'POST' | 'COMMENT' | 'MIRROR' | 'QUOTE'; };
    'TimelineFilter': { kind: 'INPUT_OBJECT'; name: 'TimelineFilter'; isOneOf: false; inputFields: [{ name: 'eventType'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TimelineEventItemType'; ofType: null; }; }; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'INPUT_OBJECT'; name: 'PostMetadataFilter'; ofType: null; }; defaultValue: null }]; };
    'TimelineHighlightsFilter': { kind: 'INPUT_OBJECT'; name: 'TimelineHighlightsFilter'; isOneOf: false; inputFields: [{ name: 'eventType'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TimelineEventItemType'; ofType: null; }; }; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'INPUT_OBJECT'; name: 'PostMetadataFilter'; ofType: null; }; defaultValue: null }]; };
    'TimelineHighlightsRequest': { kind: 'INPUT_OBJECT'; name: 'TimelineHighlightsRequest'; isOneOf: false; inputFields: [{ name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'forFeeds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: "[\"0xa8E1e68E3195d8e150A95CF2D0F0AfaE154f8fa5\"]" }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'TimelineHighlightsFilter'; ofType: null; }; defaultValue: null }]; };
    'TimelineItem': { kind: 'OBJECT'; name: 'TimelineItem'; fields: { 'comments': { name: 'comments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Post'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'mirrors': { name: 'mirrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Post'; ofType: null; }; }; }; } }; 'primary': { name: 'primary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Post'; ofType: null; }; } }; }; };
    'TimelineRequest': { kind: 'INPUT_OBJECT'; name: 'TimelineRequest'; isOneOf: false; inputFields: [{ name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }, { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'forFeeds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; }; }; defaultValue: "[\"0xa8E1e68E3195d8e150A95CF2D0F0AfaE154f8fa5\"]" }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'TimelineFilter'; ofType: null; }; defaultValue: null }]; };
    'TransactionRequest': { kind: 'OBJECT'; name: 'TransactionRequest'; fields: { 'encoded': { name: 'encoded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EncodedTransaction'; ofType: null; }; } }; 'raw': { name: 'raw'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Eip1559TransactionRequest'; ofType: null; }; } }; }; };
    'TransactionStatusRequest': { kind: 'INPUT_OBJECT'; name: 'TransactionStatusRequest'; isOneOf: false; inputFields: [{ name: 'txHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TxHash'; ofType: null; }; }; defaultValue: null }]; };
    'TransactionStatusResult': { name: 'TransactionStatusResult'; enumValues: 'FINISHED' | 'PENDING' | 'NOT_FOUND' | 'FAILED'; };
    'TransactionWillFail': { kind: 'OBJECT'; name: 'TransactionWillFail'; fields: { 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TriStateValue': { name: 'TriStateValue'; enumValues: 'YES' | 'NO' | 'UNKNOWN'; };
    'TxHash': unknown;
    'URI': unknown;
    'URL': unknown;
    'UUID': unknown;
    'UnassignUsernameFromAccountError': { kind: 'OBJECT'; name: 'UnassignUsernameFromAccountError'; fields: { 'error': { name: 'error'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UnlinkUsernameFromAccountErrorType'; ofType: null; }; } }; }; };
    'UnassignUsernameFromAccountResult': { kind: 'UNION'; name: 'UnassignUsernameFromAccountResult'; fields: {}; possibleTypes: 'OptimisticUnassignUsernameFromAccount' | 'SponsoredTransactionRequest' | 'TransactionRequest' | 'UnassignUsernameFromAccountError'; };
    'UnblockError': { kind: 'OBJECT'; name: 'UnblockError'; fields: { 'error': { name: 'error'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UnblockErrorType'; ofType: null; }; } }; }; };
    'UnblockErrorType': { name: 'UnblockErrorType'; enumValues: 'UNKNOWN' | 'NOT_BLOCKED' | 'UNAUTHORIZED'; };
    'UnblockRequest': { kind: 'INPUT_OBJECT'; name: 'UnblockRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'UnblockResult': { kind: 'UNION'; name: 'UnblockResult'; fields: {}; possibleTypes: 'OptimisticUnblock' | 'SponsoredTransactionRequest' | 'TransactionRequest' | 'UnblockError'; };
    'UndoRecommendedAccount': { kind: 'INPUT_OBJECT'; name: 'UndoRecommendedAccount'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'UnfollowResponse': { kind: 'OBJECT'; name: 'UnfollowResponse'; fields: { 'hash': { name: 'hash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TxHash'; ofType: null; }; } }; }; };
    'UnfollowResult': { kind: 'UNION'; name: 'UnfollowResult'; fields: {}; possibleTypes: 'SponsoredTransactionRequest' | 'TransactionRequest' | 'TransactionWillFail' | 'UnfollowResponse'; };
    'UnhideManagedAccountRequest': { kind: 'INPUT_OBJECT'; name: 'UnhideManagedAccountRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'UnhideReplyRequest': { kind: 'INPUT_OBJECT'; name: 'UnhideReplyRequest'; isOneOf: false; inputFields: [{ name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }]; };
    'UnknownAction': { kind: 'OBJECT'; name: 'UnknownAction'; fields: { 'contract': { name: 'contract'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NetworkAddress'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UnknownActionInput': { kind: 'INPUT_OBJECT'; name: 'UnknownActionInput'; isOneOf: false; inputFields: [{ name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'UnknownActionSettings': { kind: 'OBJECT'; name: 'UnknownActionSettings'; fields: { 'collectNft': { name: 'collectNft'; type: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; } }; 'contract': { name: 'contract'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NetworkAddress'; ofType: null; }; } }; 'initializeCalldata': { name: 'initializeCalldata'; type: { kind: 'SCALAR'; name: 'BlockchainData'; ofType: null; } }; 'initializeResultData': { name: 'initializeResultData'; type: { kind: 'SCALAR'; name: 'BlockchainData'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PostActionType'; ofType: null; }; } }; 'verified': { name: 'verified'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'UnknownFeedRuleInput': { kind: 'INPUT_OBJECT'; name: 'UnknownFeedRuleInput'; isOneOf: false; inputFields: [{ name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BlockchainData'; ofType: null; }; }; defaultValue: null }]; };
    'UnknownFollowRuleInput': { kind: 'INPUT_OBJECT'; name: 'UnknownFollowRuleInput'; isOneOf: false; inputFields: [{ name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BlockchainData'; ofType: null; }; }; defaultValue: null }]; };
    'UnknownGraphRuleInput': { kind: 'INPUT_OBJECT'; name: 'UnknownGraphRuleInput'; isOneOf: false; inputFields: [{ name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BlockchainData'; ofType: null; }; }; defaultValue: null }]; };
    'UnlinkUsernameFromAccountErrorType': { name: 'UnlinkUsernameFromAccountErrorType'; enumValues: 'UNKNOWN' | 'USERNAME_NOT_LINKED' | 'UNAUTHORIZED'; };
    'UnmuteRequest': { kind: 'INPUT_OBJECT'; name: 'UnmuteRequest'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EvmAddress'; ofType: null; }; }; defaultValue: null }]; };
    'UsernameValue': unknown;
    'VideoMetadataV3': { kind: 'OBJECT'; name: 'VideoMetadataV3'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Void': unknown;
    'WhoActedOnPostFilter': { kind: 'INPUT_OBJECT'; name: 'WhoActedOnPostFilter'; isOneOf: false; inputFields: [{ name: 'anyOf'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ActionFilter'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'WhoActedOnPostOrderBy': { name: 'WhoActedOnPostOrderBy'; enumValues: 'LAST_ACTIONED' | 'FIRST_ACTIONED' | 'ACCOUNT_SCORE'; };
    'WhoActedOnPostRequest': { kind: 'INPUT_OBJECT'; name: 'WhoActedOnPostRequest'; isOneOf: false; inputFields: [{ name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'WhoActedOnPostFilter'; ofType: null; }; defaultValue: null }, { name: 'orderBy'; type: { kind: 'ENUM'; name: 'WhoActedOnPostOrderBy'; ofType: null; }; defaultValue: null }, { name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }]; };
    'WhoReferencedPostOrderBy': { name: 'WhoReferencedPostOrderBy'; enumValues: 'LAST_ACTIONED' | 'FIRST_ACTIONED' | 'ACCOUNT_SCORE'; };
    'WhoReferencedPostRequest': { kind: 'INPUT_OBJECT'; name: 'WhoReferencedPostRequest'; isOneOf: false; inputFields: [{ name: 'postId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PostId'; ofType: null; }; }; defaultValue: null }, { name: 'referenceTypes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PostReferenceType'; ofType: null; }; }; }; defaultValue: null }, { name: 'orderBy'; type: { kind: 'ENUM'; name: 'WhoReferencedPostOrderBy'; ofType: null; }; defaultValue: null }, { name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; }; defaultValue: null }]; };
    'WrongSignerError': { kind: 'OBJECT'; name: 'WrongSignerError'; fields: { 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    '_Service': { kind: 'OBJECT'; name: '_Service'; fields: { 'sdl': { name: 'sdl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'Query';
  mutation: 'Mutation';
  subscription: never;
  types: introspection_types;
};

import 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}
